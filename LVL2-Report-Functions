Option Compare Database

Public Function setReportName(jobID As String) As String
Dim dbs As Database
Dim rs As Recordset
Dim name As String
name = "LVL2 RPT_"
Set dbs = CurrentDb()
Set rs = dbs.OpenRecordset("SELECT vActiveJobs.class, vActiveJobs.hullNum, vActiveJobs.Space, vActiveRepairJobs.repairJCN, vActiveJobs.jID, vActiveRepairJobs.repairAvail FROM vActiveJobs LEFT JOIN vActiveRepairJobs ON vActiveJobs.jID = vActiveRepairJobs.lvl2JobID WHERE vActiveJobs.jID='" & jobID & "' ORDER BY vActiveRepairJobs.repairAvail;")

name = name & rs.Fields(0) & "" & rs.Fields(1) & "_" & rs.Fields(2) & "_" & noTackJCN(rs.Fields(3))

rs.Close
dbs.Close

setReportName = formatTitle(name)
End Function

Public Function formatTitle(x As String) As String
    'File title cannot have various symbols in it
    x = Replace(x, ".", " ")
    x = Replace(x, "*", " ")
    x = Replace(x, "\", "-")
    x = Replace(x, ":", "-")
    x = Replace(x, Chr(34), " ")
    formatTitle = Replace(x, "/", "-")
End Function

Public Function buildCond(condID As String) As String
On Error GoTo condError
    Dim out As String
    Dim db As Database
    Dim rs As Recordset
    Set db = CurrentDb()
    
    'Get problem statement and wastage
    Set rs = db.OpenRecordset("SELECT problem, wastage FROM vActiveConds WHERE ID='" & condID & "'")

    'Set problem description
    Dim cond As String
    cond = rs.Fields(0)
    If IsNull(cond) = False Then
        out = cond
    End If
    
    'Set wastage in condition statement
    Dim waste As Integer
    If Len(rs.Fields(1)) > 0 Then
        If rs.Fields(1) < 100 Then
            waste = rs.Fields(1)
            out = out & " WASTAGE: " & waste & "%"
        End If
    End If
    
    'Get photo #
    Dim photo As String
    Set rs = db.OpenRecordset("SELECT photoNum FROM rptPhotos WHERE condID='" & condID & "' ORDER BY photoNum")
    Do While rs.EOF = False
        photo = photo & rs.Fields(0) & ","
        rs.MoveNext
    Loop
    
    'Set photo # in condition statement
    If Len(photo) > 0 Then
        out = out & " SEE PHOTO: " & listMaker(photo)
    End If
    
    'Get fig #
    Dim fig As String
    Set rs = db.OpenRecordset("SELECT DISTINCT figNum FROM rptFigs WHERE condID='" & condID & "' ORDER BY figNum")
    Do While rs.EOF = False
        fig = fig & rs.Fields(0) & ","
        rs.MoveNext
    Loop
    
    If Len(photo) > 0 And Len(fig) > 0 Then
        out = out & ";"
    End If
    
    'Set fig # in condition statement
    If Len(fig) > 0 Then
        out = out & " FIGURE: " & listMaker(fig)
    End If
    
    If Len(photo) > 0 Or Len(fig) > 0 Then
        out = out & "."
    End If
    
    If IsNull(out) = False Then
        buildCond = out
    Else
        buildCond = Null
    End If
    rs.Close
    db.Close
    
condError:
Resume Next

End Function

Public Function setFigureCaption(x As Integer) As String
On Error GoTo figCaptionError
Dim db As Database
Dim rs1 As Recordset
Dim jobID As String
Dim refNum As Integer
Dim sheet As String
Dim refID As String
Set db = CurrentDb()

If SysCmd(acSysCmdGetObjectState, acForm, "viewReport") <> 0 Then
    jobID = Forms!viewReport!Combo1.Value
Else
    jobID = "XX.1"
End If

Set rs1 = db.OpenRecordset("SELECT DISTINCT rptFigs.condNum, rptFigs.sheetNum, xReferences.ref FROM rptFigs LEFT JOIN xReferences ON rptFigs.refID = xReferences.ID WHERE  rptFigs.jobID='" & jobID & "' AND rptFigs.figNum=" & x & " ORDER BY condNum")
'rs1.MoveLast
If rs1.recordCount > 0 Then
    ref = rs1.Fields(2)
    If Len(rs1.Fields(1)) > 0 Then
        sheet = " SHEET " & rs1.Fields(1)
    End If
End If

'Get Condition List
Dim recordCount As Integer
recordCount = rs1.recordCount
Dim condList As String
If recordCount = 1 Then
    condList = " " & rs1.Fields(0)
ElseIf recordCount > 1 Then
    Do While rs1.EOF = False
        condList = condList & rs1.Fields(0) & ","
        rs1.MoveNext
    Loop
    condList = "S " & listMaker(condList)
End If

'Get Reference Num
'Dim key() As String
'Dim ref As String
'If Len(refID) > 1 Then
'    key = Split(refID, ".")
'    Set rs1 = db.OpenRecordset("SELECT ref FROM references WHERE jobID='" & jobID & "' AND pk=" & key(1) & " AND sk='" & key(0) & "' ORDER BY pk")
'    ref = rs1.Fields(0)
'End If

Dim c As Integer
c = 4
Set rs1 = db.OpenRecordset("SELECT DISTINCT ref FROM references WHERE jobID='" & jobID & "' AND figureID <>'' ORDER BY ref")
    Do While rs1.EOF = False
        c = c + 1
        If StrComp(ref, rs1.Fields(0)) = 0 Then
           refNum = c
        End If
        rs1.MoveNext
    Loop
    
rs1.Close
db.Close
setFigureCaption = "REFERENCE " & refNum & sheet & " SHOWS THE LOCATION OF CONDITION" & condList & " IDENTIFIED IN THE INSPECTION RESULTS SECTION OF THIS REPORT."

figCaptionError:
Resume Next

End Function

Public Function setPhotoCaption(x As Integer) As String
On Error GoTo photoCaptionError
Dim db As Database
Dim rs As Recordset
Dim c As Integer
Dim condList As String
Dim prob As String
Set db = CurrentDb()
If SysCmd(acSysCmdGetObjectState, acForm, "viewReport") <> 0 Then
Set rs = db.OpenRecordset("SELECT condNum, problem FROM rptPhotos WHERE jobID='" & Forms!viewReport!Combo1.Value & "' AND photoNum=" & x & " ORDER BY condNum")
rs.MoveLast

'If photo only has 1 condition, list problem description, otherwise list all conditions
If rs.recordCount = 1 Then
    condList = rs.Fields(0)
    prob = rs.Fields(1)
    setPhotoCaption = "CONDITION " & condList & " - " & prob
Else
    rs.MoveFirst
    Do While rs.EOF = False
        condList = condList & rs.Fields(0) & ","
        rs.MoveNext
    Loop
    setPhotoCaption = "SHOWS CONDITIONS " & listMaker(condList) & " IDENTIFIED IN THE INSPECTION RESULTS SECTION OF THIS REPORT."
End If
rs.Close
End If
db.Close

photoCaptionError:
Resume Next

End Function

Public Function noTackJCN(JCN As String) As String
    Dim x As Integer
    Dim y As Integer
    Dim a As String
    Dim b As String
    Dim c As String
    If StrComp(JCN, "none", vbTextCompare) = 0 Then
        noTackJCN = "NONE"
    Else
        Do While x < Len(JCN)
            If StrComp(Mid(JCN, x + 1, 1), "-", vbBinaryCompare) = 0 Then
                a = Left(JCN, x)
                y = x
                Exit Do
            End If
            x = x + 1
        Loop
        noTackJCN = a & Mid(JCN, y + 2, 4) & Right(JCN, 4) & "-2L"
    End If
End Function
Public Function reportJCN(JCN As String) As String
    Dim name As String
    name = noTackJCN(JCN)
    If StrComp(name, "NONE", vbTextCompare) = 0 Then
        reportJCN = ""
    Else
        reportJCN = name
    End If
End Function

Public Function listConds(x As String) As String
Dim con As String
con = Split(x, ",")
End Function

Public Function setMaintPerson(jID As String, personField As String, useCurrent As Boolean) As String
Dim db As Database
Set db = CurrentDb()
Dim rs As Recordset
Dim dt As String
Dim ship As String
Dim maintID As String
Dim out As String

'CHECK FOR END DATE
If useCurrent = False Then
Set rs = db.OpenRecordset("SELECT [timeStamp] FROM peerReview WHERE jobID = '" & jID & "'")
If rs.recordCount > 0 Then
    Do While rs.EOF = False
        dt = Format(rs.Fields(0), "mm/dd/yyyy")
        rs.MoveNext
    Loop
Else
'IF NOT GET START DATE
    Set rs = db.OpenRecordset("SELECT dateInspect FROM vActiveJobs WHERE jID ='" & jID & "'")
    If rs.recordCount > 0 Then
        Do While rs.EOF = False
            dt = Format(rs.Fields(0), "mm/dd/yyyy")
            rs.MoveNext
        Loop
    End If
End If

'GET SHIP ID
Set rs = db.OpenRecordset("SELECT shipID FROM vActiveJobs WHERE jID = '" & jID & "'")
If rs.recordCount > 0 Then
    Do While rs.EOF = False
        ship = rs.Fields(0)
        rs.MoveNext
    Loop
End If

'GET PERSON ID FROM ASSIGNMENT TABLE
Set rs = db.OpenRecordset("SELECT assignID FROM assign" & personField & " WHERE shipID = '" & ship & "' AND CDate(timestamp) < #" & dt & "#+1 ORDER BY timestamp DESC")

If rs.recordCount > 0 Then
    rs.MoveFirst
    maintID = rs.Fields(0)
End If

'GET PERSON INFO
If Len(maintID) > 1 Then
    Set rs = db.OpenRecordset("SELECT firstName, lastName, email FROM xPPLmaintTeam WHERE ID='" & maintID & "'")
        If rs.recordCount > 0 Then
            out = rs.Fields(0) & " " & rs.Fields(1) & "     " & rs.Fields(2)
        End If
End If
Else
    'GET SHIP ID
    Set rs = db.OpenRecordset("SELECT shipID FROM vActiveJobs WHERE jID = '" & jID & "'")
    If rs.recordCount > 0 Then
    Do While rs.EOF = False
        ship = rs.Fields(0)
        rs.MoveNext
    Loop
    End If
    Set rs = db.OpenRecordset("SELECT assignID FROM assign" & personField & " WHERE shipID = '" & ship & "' ORDER BY timestamp DESC")
    If rs.recordCount > 0 Then
        rs.MoveFirst
        maintID = rs.Fields(0)
    End If
    If Len(maintID) > 1 Then
    Set rs = db.OpenRecordset("SELECT firstName, lastName, email FROM xPPLmaintTeam WHERE ID='" & maintID & "'")
        If rs.recordCount > 0 Then
            out = rs.Fields(0) & " " & rs.Fields(1) & "     " & rs.Fields(2)
        End If
    End If
End If

If IsNull(out) = False Then
    setMaintPerson = out
Else
    setMaintPerson = "ERROR"
End If
rs.Close
db.Close
End Function

Public Function setInspectionResultsGroupHeader(repJCN As String, repAvail As Integer) As String
If repAvail = 1 Then
    setInspectionResultsGroupHeader = "REPAIR IN CURRENT MAINTENANCE CYCLE - " & repJCN
ElseIf repAvail = 2 Then
    setInspectionResultsGroupHeader = "REPAIR IN NEXT MAINTENANCE CYCLE - " & repJCN
ElseIf repAvail = 3 Then
    setInspectionResultsGroupHeader = "NO MANDATORY REPAIRS REQUIRED"
Else
    setInspectionResultsGroupHeader = "NO REPAIR JCN HAS BEEN CREATED FOR THIS JOB YET"
End If
End Function

Public Function setInspectionResultsGroupNote(repAvail As Integer) As String
Dim str As String
If repAvail = 1 Then
    str = "             REFERENCE 1 REQUIRES THAT ALL ITEMS DESIGNATED WITH R5/S5, AND R4/S5 CONDITIONS ARE REQUIRED REPAIR IN THE CURRENT MAINTENANCE CYCLE OR SUBMISSION OF A MAJOR DEPARTURE FROM SPECIFICATION."
ElseIf repAvail = 2 Then
    str = "             REFERENCE 1 REQUIRES THAT ALL ITEMS DESIGNATED WITH R3/S5 CONDITIONS ARE REQUIRED REPAIR IN THE NEXT MAINTENANCE CYCLE OR SUBMISSION OF A DEPARTURE FROM SPECIFICATION."
ElseIf repAvail = 3 Then
    str = "             REFERENCE 1 REQUIRES THAT ALL ITEMS DESIGNATED LESS THAN S5 CONDITIONS DO NOT REQUIRE STRUCTURAL REPAIR; HOWEVER THEY MAY REQUIRE MANDATORY RE-INSPECTION OR DISCRETIONARY MAINTENANCE."
Else
    str = "             REFERENCE 1 REQUIRES THAT ALL ITEMS DESIGNATED LESS THAN S5 CONDITIONS DO NOT REQUIRE STRUCTURAL REPAIR; HOWEVER THEY MAY REQUIRE MANDATORY RE-INSPECTION OR DISCRETIONARY MAINTENANCE."
End If

setInspectionResultsGroupNote = str
End Function

Public Function repairActionPhrase(repAvail As Integer) As String
If repAvail = 3 Then
    repairActionPhrase = "REPAIR ACTION:" & vbNewLine & "(OPTIONAL)"
Else
    repairActionPhrase = "REPAIR ACTION:"
End If
End Function
